(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{373:function(e,t,r){"use strict";r.r(t);var o=r(33),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"creating-an-entando-component-repository-ecr-bundle-from-blueprint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#creating-an-entando-component-repository-ecr-bundle-from-blueprint"}},[e._v("#")]),e._v(" Creating an Entando Component Repository (ECR) bundle from Blueprint")]),e._v(" "),r("h2",{attrs:{id:"purpose"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#purpose"}},[e._v("#")]),e._v(" Purpose")]),e._v(" "),r("p",[e._v("In this tutorial you will learn how to generate an ECR bundle from a microservice generated using the JHipster’s Entando Blueprint.")]),e._v(" "),r("h2",{attrs:{id:"requirements"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("A microservice built with the Entando Blueprint")])]),e._v(" "),r("li",[r("p",[e._v("Node and NPM are installed on your machine")])]),e._v(" "),r("li",[r("p",[e._v("An NPM registry where to upload the bundle (must be logged in)")])]),e._v(" "),r("li",[r("p",[e._v("Docker installed on your machine and you are able to upload images\nto docker-hub")])])]),e._v(" "),r("h2",{attrs:{id:"steps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[e._v("#")]),e._v(" Steps")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("Note")])]),e._v(" "),r("p",[e._v("In this tutorial we will assume you have generated at least an entity for your microservice.")])]),e._v(" "),r("h3",{attrs:{id:"_1-generate-an-entity"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-generate-an-entity"}},[e._v("#")]),e._v(" 1. Generate an entity")]),e._v(" "),r("p",[e._v("In order to include auto-generated micro frontends to your bundle you will need to use the "),r("code",[e._v("jhispter entity")]),e._v(" generator. Let’s assume we want to generate a simple "),r("em",[e._v("Conference")]),e._v(" entity.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("jhipster entity Conference\n")])])]),r("p",[e._v("Let’s use these options:")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("One field of type "),r("code",[e._v("String")]),e._v(" called "),r("code",[e._v("name")]),e._v(" with no validation")])]),e._v(" "),r("li",[r("p",[e._v("No relationships with other entities")])]),e._v(" "),r("li",[r("p",[e._v("REST controller should use the repository directly")])]),e._v(" "),r("li",[r("p",[e._v("No pagination for the entity")])])]),e._v(" "),r("h3",{attrs:{id:"_2-populate-the-bundle-with-the-micro-frontends"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-populate-the-bundle-with-the-micro-frontends"}},[e._v("#")]),e._v(" 2. Populate the bundle with the micro frontends")]),e._v(" "),r("p",[e._v("To populate the bundle with the generated micro frontends, run the "),r("code",[e._v("./buildBundle.sh")]),e._v(" script or use the npm.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("npm run populate-bundle\n")])])]),r("blockquote",[r("p",[r("strong",[e._v("Important")]),e._v("\nThe bundle population with the micro frontends requires some time to be processed. You should be able to follow the progress of the operation on screen.")])]),e._v(" "),r("h3",{attrs:{id:"_3-generate-a-docker-image-for-your-microservice"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-generate-a-docker-image-for-your-microservice"}},[e._v("#")]),e._v(" 3. Generate a docker image for your microservice")]),e._v(" "),r("p",[e._v("JHipster uses the JIB Maven plugin to generate a docker image for your microservice.")]),e._v(" "),r("p",[e._v("By default the output image will use the name of your application and the "),r("code",[e._v("0.0.1-SNAPSHOT")]),e._v(" tag, eg. "),r("code",[e._v("entando/jhipster@0.0.1-SNAPSHOT")]),e._v(".")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("./mvnw -Pprod clean package jib:dockerBuild [-Djib.to.image=<your-image-name]\n")])])]),r("blockquote",[r("p",[r("strong",[e._v("Note")])]),e._v(" "),r("p",[e._v("By default the organization used to generate the docker image is "),r("code",[e._v("entando")]),e._v(", but you can provide a custom value during project initialization, as well as by changing the "),r("code",[e._v("pom.xml")]),e._v(" file or by providing the "),r("code",[e._v("-Djib.to.image=<org>/<name>:<version>")]),e._v(" to the "),r("code",[e._v("jib:dockerBuild")]),e._v(" command.")])]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("Note")])]),e._v(" "),r("p",[e._v("Output image name is generated using the organization value defined during project initialization. You can override the provided values by altering the "),r("code",[e._v("pom.xml")]),e._v(" file or by customizing the "),r("code",[e._v("-Djib.to.image")]),e._v(" parameter used in the "),r("code",[e._v("./mvnw")]),e._v(" command")])]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("Warning")])]),e._v(" "),r("p",[e._v("If you manually override the target image of the docker build, remember to update the plugin metadata in the bundle accordingly.")])]),e._v(" "),r("h3",{attrs:{id:"_4-publish-the-docker-image-to-docker-registry-dockerhub-or-equivalent"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-publish-the-docker-image-to-docker-registry-dockerhub-or-equivalent"}},[e._v("#")]),e._v(" 4. Publish the Docker image to Docker registry (DockerHub or equivalent)")]),e._v(" "),r("p",[e._v("Let’s now publish the docker image for the microservice to make it available later during bundle installation in the cluster.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("docker push <name-of-the-image:tag>\n")])])]),r("h3",{attrs:{id:"_5-publish-the-bundle-to-an-npm-registry"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-publish-the-bundle-to-an-npm-registry"}},[e._v("#")]),e._v(" 5. Publish the bundle to an Npm registry")]),e._v(" "),r("p",[e._v("Now let’s publish the bundle to your private NPM registry.")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("cd bundle/\n\nnpm publish . --registry=<your-private-registry-url>\n")])])]),r("h3",{attrs:{id:"_6-generate-the-entandodebundle-kubernetes-custom-resource"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-generate-the-entandodebundle-kubernetes-custom-resource"}},[e._v("#")]),e._v(" 6. Generate the EntandoDeBundle Kubernetes custom resource")]),e._v(" "),r("p",[e._v("You should now be able to generate an EntandoDeBundle custom resource using the "),r("code",[e._v("entando-bundle")]),e._v(" command-line tool.")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("Warning")])]),e._v(" "),r("p",[e._v("Make sure both the NPM registry where you published the bundle and the Docker registry where you published the docker image are accessible in read mode without restrictions.")])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("entando-bundle from-npm <your-bundle-name> --dry-run --registry=<your-private-registry> [--name=<custom-name>] [--namespace=<namespace-to-deploy>] > jhipster-bundle.yaml\n")])])]),r("h3",{attrs:{id:"_7-deploy-the-entandodebundle-custom-resource-on-the-cluster"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-deploy-the-entandodebundle-custom-resource-on-the-cluster"}},[e._v("#")]),e._v(" 7. Deploy the EntandoDeBundle custom resource on the cluster")]),e._v(" "),r("p",[e._v("Finally, let’s deploy the previously generated custom resource on the Kubernetes/OpenShift cluster")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("kubectl create -f jhipster-bundle.yaml\n")])])]),r("h2",{attrs:{id:"conclusion"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[e._v("#")]),e._v(" Conclusion")]),e._v(" "),r("p",[e._v("You should now have the bundle available in your cluster and accessible from App Builder.")]),e._v(" "),r("h2",{attrs:{id:"resources"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#resources"}},[e._v("#")]),e._v(" Resources")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"../how-to-create-local-npm-registry"}},[e._v("Setup a local npm registry for testing\npurposes")])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://github.com/entando-k8s/entando-bundle-cli",target:"_blank",rel:"noopener noreferrer"}},[e._v("Entando Bundle CLI\nproject"),r("OutboundLink")],1)])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://github.com/entando/entando-blueprint",target:"_blank",rel:"noopener noreferrer"}},[e._v("Entando blueprint"),r("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=a.exports}}]);