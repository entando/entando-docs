(window.webpackJsonp=window.webpackJsonp||[]).push([[354],{1459:function(t,e,a){"use strict";a.r(e);var n=a(36),l=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"bundle-management"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bundle-management"}},[t._v("#")]),t._v(" Bundle Management")]),t._v(" "),a("p",[t._v("The Entando Bundle CLI extends the functionality of "),a("strong",[t._v("ent")]),t._v(" through a dedicated bundle management system. The "),a("code",[t._v("ent bundle")]),t._v(" command orchestrates the lifecycle of a project, packaging it into a convenient and recognizable docker-based bundle that can be inserted into any Entando Application. This composable approach takes advantage of a single project descriptor and repository, along with centralized "),a("RouterLink",{attrs:{to:"/next/docs/getting-started/ent-api.html"}},[t._v("API management")]),t._v(" and "),a("RouterLink",{attrs:{to:"/next/docs/getting-started/ent-svc.html"}},[t._v("DB and Keycloak services")]),t._v(". Common operations and the steps required to create an Entando Bundle are detailed below.")],1),t._v(" "),a("p",[t._v("In addition, this document describes the series of "),a("code",[t._v("ent ecr")]),t._v(" commands that manage bundle interactions with the "),a("RouterLink",{attrs:{to:"/next/docs/compose/local-hub-overview.html"}},[t._v("Entando Component Repository")]),t._v(" (ECR). These are applicable to both docker-based bundles and their git-based predecessors (< Entando 7.1). Notable commands applicable to creating and deploying git-based bundles only are also discussed.")],1),t._v(" "),a("h2",{attrs:{id:"entando-bundle-development"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#entando-bundle-development"}},[t._v("#")]),t._v(" Entando Bundle Development")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("ent bundle")]),t._v(" CLI tool provides a streamlined process to govern the files, structure, and management of Entando bundles. The bundle development lifecycle consists of 6 stages, each corresponding to a subcommand:")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"#initialization"}},[t._v("Initialization")]),t._v(": "),a("code",[t._v("ent bundle init")]),t._v(" initializes a new bundle project, either with the default files and folders or from an existing bundle in an Entando Hub. The bundle format relies on a single JSON descriptor as the project manifest.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"#build"}},[t._v("Build")]),t._v(": With the structure established, "),a("code",[t._v("ent bundle build")]),t._v(" generates micro frontend (MFE) and microservice (MS) components. These are filtered by type and name and assigned version numbers.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"#run"}},[t._v("Run")]),t._v(": "),a("code",[t._v("ent bundle run")]),t._v(" and Keycloak integration enable components to be tested locally, external to an Entando cluster.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"#package"}},[t._v("Package")]),t._v(": "),a("code",[t._v("ent bundle pack")]),t._v(" generates the bundle artifacts, the bundle image and the microservice images. One image is created for each microservice while a single image is created for the bundle and micro frontends.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"#publish"}},[t._v("Publish")]),t._v(": "),a("code",[t._v("ent bundle publish")]),t._v(" pushes the Docker images to a Docker repository, after which the bundle can be deployed and installed.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"#deploy"}},[t._v("Deploy")]),t._v(": "),a("code",[t._v("ent bundle deploy")]),t._v(" delivers a published bundle to the ECR of an Entando Application. The bundle custom resource is generated and tags are retrieved from Docker Hub.")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"#install"}},[t._v("Install")]),t._v(": "),a("code",[t._v("ent bundle install")]),t._v(" applies the bundle to the Entando instance. It is then available in the App Builder for unlimited reuse within the application.")])])]),t._v(" "),a("p",[t._v("See the "),a("RouterLink",{attrs:{to:"/next/tutorials/create/pb/publish-simple-bundle.html"}},[t._v("Build and Publish a Simple Bundle")]),t._v(" tutorial to see the full process. And for more information on Entando Bundle specifications, go to the "),a("RouterLink",{attrs:{to:"/next/docs/curate/bundle-details.html"}},[t._v("Bundle Details")]),t._v(" page.")],1),t._v(" "),a("h2",{attrs:{id:"docker-based-bundle-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-based-bundle-commands"}},[t._v("#")]),t._v(" Docker-based Bundle Commands")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Commands")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle build")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Build components (MFE, MS) with a selector")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle deploy")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Deploy a bundle to the Local Hub of an Entando Application")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle generate-cr")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate the Entando Custom Resource for a bundle project")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle help")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Display help for ent bundle")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle info")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Show status information for the bundle project")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle init")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize the project folder structure and descriptor")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle install")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Install a bundle to the Local Hub of an Entando Application")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle list")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("List the available bundle components")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle mfe add")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add a micro frontend")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle mfe rm")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Remove a micro frontend")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle ms add")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add a microservice")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle ms rm")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Remove a microservice")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle run")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Run bundle components")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle pack")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Create distribution artifacts (Docker images)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle publish")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Publish images to a Docker registry")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent --debug bundle")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Enable debug mode")])])])]),t._v(" "),a("h3",{attrs:{id:"initialization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initialization"}},[t._v("#")]),t._v(" Initialization")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle init [name]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize a new empty project with the default structure and files")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle init [name] --from-hub")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize a bundle from the Entando Cloud Hub")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle init [name] --from-hub --hub-url=[url]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize a bundle from an enterprise Entando Hub")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle init [name] --from-hub --hub-url=[url] --hub-api-key=[]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize a bundle from a private Entando Hub with an API key")])])])]),t._v(" "),a("h4",{attrs:{id:"init-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init-command-details"}},[t._v("#")]),t._v(" Init Command Details")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Bundle names may only contain lowercase letters, numbers, periods(.) and dashes(-). They cannot start or end with periods or dashes.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--from-hub")]),t._v(": This option leverages an existing bundle from an Entando Hub to jumpstart your project. The "),a("code",[t._v("ent bundle")]),t._v(" tool will pull the package and rebuild the structure, which can then be customized locally.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--hub-url")]),t._v(": Use this option to specify a custom Entando Hub, else ent defaults to the Entando Cloud Hub")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("--hub-api-key")]),t._v(": This flag supplies the "),a("RouterLink",{attrs:{to:"/next/tutorials/solution/entando-hub.html#create-a-private-catalog"}},[t._v("Hub API key")]),t._v(" to access a bundle from a private enterprise Entando Hub to copy it locally.")],1)])]),t._v(" "),a("h3",{attrs:{id:"micro-frontend-and-microservice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#micro-frontend-and-microservice"}},[t._v("#")]),t._v(" Micro Frontend and Microservice")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle mfe add")]),t._v(" --stack [stack-type] [name]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add a React or Angular micro frontend")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle mfe add")]),t._v(" --stack custom [name]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add a custom stack micro frontend")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle ms add --stack [stack-type] [name]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add a Spring Boot or node microservice")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle ms add")]),t._v(" --stack custom [name]`")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Add a custom stack microservice")])])])]),t._v(" "),a("h4",{attrs:{id:"mfe-and-ms-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mfe-and-ms-command-details"}},[t._v("#")]),t._v(" MFE and MS Command Details")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ent bundle mfe add --stack custom [name]")]),t._v(" & "),a("code",[t._v("ent bundle ms add --stack custom [name]")]),t._v(": When a custom stack is used for any MFE or microservice, custom commands for the build, run, and pack functions are required under the Command spec in the bundle descriptor "),a("code",[t._v("entando.json")]),t._v(". In addition, a version number must be specified for each component. Because Entando can only parse information from a pom.xml or package.json, the custom commands are required to manage the bundle, and the version number is required to track Docker images. For an example, see the "),a("RouterLink",{attrs:{to:"/next/docs/curate/bundle-details.html#micro-frontends-sample-code"}},[t._v("Bundle Details")]),t._v(" page.")],1)]),t._v(" "),a("h3",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" Build")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle build [component-name]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Build a single component")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle build [mfe-1] [ms-2]...")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Build one or more named components passed as arguments")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle build --all")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Build all the components in the project")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle build --all-ms")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Build all the microservices")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle build --all-mfe")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Build all the micro frontends")])])])]),t._v(" "),a("h4",{attrs:{id:"build-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-command-details"}},[t._v("#")]),t._v(" Build Command Details")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ent bundle build")]),t._v(":\n"),a("ul",[a("li",[t._v("The "),a("code",[t._v("build")]),t._v(" command constructs the project files based on the "),a("code",[t._v("entando.json")]),t._v(" descriptor.")]),t._v(" "),a("li",[t._v("Component type and stack determines the build process, e.g. a React MFE executes an npm build. It can be customized in the command section of the "),a("code",[t._v("entando.json")]),t._v(".")]),t._v(" "),a("li",[t._v("All the components in the bundle are built in parallel.")]),t._v(" "),a("li",[t._v("A log file for each component is generated inside the .entando/logs directory of the project.")])])]),t._v(" "),a("li",[a("code",[t._v("--fail-fast")]),t._v(":\n"),a("ul",[a("li",[t._v("Fail the command as soon as any subtask fails")])])]),t._v(" "),a("li",[a("code",[t._v("--max-parallel=<value>")]),t._v(":\n"),a("ul",[a("li",[t._v("Maximum number of subtasks running simultaneously. The default value is 3. Setting "),a("code",[t._v("max-parallel=1")]),t._v(" results in a sequential process.")])])]),t._v(" "),a("li",[a("code",[t._v("--stdout")]),t._v(":\n"),a("ul",[a("li",[t._v("Print the subtask logs to the standard output (stdout) instead of individual log files. This is very useful in CI/CD pipelines.")])])])]),t._v(" "),a("h3",{attrs:{id:"run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[t._v("#")]),t._v(" Run")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle run [component-name]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Locally run a single component")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle run [mfe-1] [ms-2]...")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Locally run one or more named components passed as arguments")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle run --all")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Locally run all the components in the project")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle run --all-ms")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Locally run all the microservices")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle run --all-mfe")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Locally run all the micro frontends")])])])]),t._v(" "),a("h4",{attrs:{id:"run-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-command-details"}},[t._v("#")]),t._v(" Run Command Details")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ent bundle run")]),t._v(":\n"),a("ul",[a("li",[t._v("The "),a("code",[t._v("run")]),t._v(" command executes processes in accordance with the component type and stack, e.g "),a("code",[t._v("mvn spring-boot:run")]),t._v(" for a Spring Boot microservice. It can be customized in the command section of the "),a("code",[t._v("entando.json")]),t._v(".")]),t._v(" "),a("li",[t._v("All the components in the bundle run in parallel, with the logs printed to the standard output.")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("run")]),t._v(" command can be used to run multiple microservices side by side without collision in local development, but in production, they must run on port 8081.")])])])]),t._v(" "),a("h3",{attrs:{id:"package"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#package"}},[t._v("#")]),t._v(" Package")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle pack")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate the bundle artifacts, the bundle image and the microservice images")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle pack --org [organization]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate the bundle artifacts and images, passing the organization name to Docker Hub")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle pack --file [my-dockerfile]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Use a custom Dockerfile for the bundle")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle pack --skip-docker-build")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Skip the building of Docker images")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle images")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Extract the names and tags of Docker images")])])])]),t._v(" "),a("h4",{attrs:{id:"pack-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pack-command-details"}},[t._v("#")]),t._v(" Pack Command Details")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ent bundle pack")]),t._v(":\n"),a("ul",[a("li",[t._v("The artifacts generated for micro frontends and microservices are stored in their respective component folders. File format depends on component type, e.g. a React micro frontend may result in HTML, JavaScript and CSS files.")]),t._v(" "),a("li",[t._v("Once the artifacts are generated, a Docker image for each microservice is built using the Dockerfile located in the microservice's folder. If the Dockerfile is missing, the "),a("code",[t._v("pack")]),t._v(" command exits with failure.")]),t._v(" "),a("li",[t._v("The "),a("code",[t._v("pack")]),t._v(" command executes either "),a("code",[t._v("mvn package")]),t._v(" or "),a("code",[t._v("npm run build")]),t._v(", depending on the stack. These defaults can be overridden in the "),a("RouterLink",{attrs:{to:"/next/docs/curate/bundle-details.html#command-specification"}},[t._v("custom command section")]),t._v(" of the bundle descriptor "),a("code",[t._v("entando.json")]),t._v(".")],1)])]),t._v(" "),a("li",[a("code",[t._v("--fail-fast")]),t._v(":\n"),a("ul",[a("li",[t._v("Fail the command as soon as any subtask fails")])])]),t._v(" "),a("li",[a("code",[t._v("--max-parallel=<value>")]),t._v(":\n"),a("ul",[a("li",[t._v("Maximum number of subtasks running simultaneously. The default value is 3. Setting "),a("code",[t._v("max-parallel=1")]),t._v(" results in a sequential process.")])])]),t._v(" "),a("li",[a("code",[t._v("--stdout")]),t._v(":\n"),a("ul",[a("li",[t._v("Print the subtask logs to the standard output (stdout) instead of individual log files. This is very useful in CI/CD pipelines.")])])]),t._v(" "),a("li",[a("code",[t._v("--skip-docker-build")]),t._v(":\n"),a("ul",[a("li",[t._v("Allow the user to create a custom image build. The YAML descriptors and Dockerfile are created in the "),a("code",[t._v(".output")]),t._v(" folder but no images are generated for the bundle and microservices.")])])]),t._v(" "),a("li",[a("code",[t._v("ent bundle images")]),t._v(":\n"),a("ul",[a("li",[t._v("Return the Docker image names and tags. These are used to manually build the bundle and microservice images in the "),a("code",[t._v(".output")]),t._v(" and microservice folders, respectively.")])])])]),t._v(" "),a("h3",{attrs:{id:"publish"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#publish"}},[t._v("#")]),t._v(" Publish")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle publish")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Publish the Docker images to the default Docker registry")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle publish --org [organization]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Publish the Docker images to the default Docker registry, specifying the organization")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle publish --registry [registry]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Specify the Docker registry to which the images will be published")])])])]),t._v(" "),a("h3",{attrs:{id:"deploy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy"}},[t._v("#")]),t._v(" Deploy")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle deploy")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Deploy a bundle to the Local Hub of an Entando Application")])])])]),t._v(" "),a("h3",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle install")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Install a bundle in the Local Hub of an Entando Application")])])])]),t._v(" "),a("h4",{attrs:{id:"install-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-command-details"}},[t._v("#")]),t._v(" Install Command Details")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ent bundle install --conflict-strategy=OVERRIDE")]),t._v(": If a bundle project has already been installed, the "),a("code",[t._v("--conflict-strategy")]),t._v(" flag forces a "),a("code",[t._v("CREATE")]),t._v(", "),a("code",[t._v("SKIP")]),t._v(" or "),a("code",[t._v("OVERRIDE")]),t._v(" strategy for components")])]),t._v(" "),a("h3",{attrs:{id:"convert-v1-to-v5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#convert-v1-to-v5"}},[t._v("#")]),t._v(" Convert v1 to v5")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle convert --bundle-path [path1]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("path1")]),t._v(" is the root folder containing the bundle descriptor.yaml")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("`ent bundle convert --bundle-path [path1] --svc-path [path2]")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("path2")]),t._v(" is the services folder containing the Docker Compose files")])])])]),t._v(" "),a("p",[t._v("For more information, see the "),a("RouterLink",{attrs:{to:"/next/docs/reference/convert-bundle.html"}},[t._v("Convert a v1 to v5 Bundle")]),t._v(" tutorial.")],1),t._v(" "),a("h3",{attrs:{id:"generate-cr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generate-cr"}},[t._v("#")]),t._v(" Generate CR")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundle generate-cr -t []")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate the Custom Resource (CR) for a bundle project, including versions based on tags for development, production or both. The default is the production tag type.")])])])]),t._v(" "),a("h4",{attrs:{id:"generate-cr-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#generate-cr-command-details"}},[t._v("#")]),t._v(" Generate CR Command Details")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("ent bundle generate-cr -t dev")]),t._v(": Selects only development tags to include in the CR for deployment")]),t._v(" "),a("li",[a("code",[t._v("ent bundle generate-cr -t prod")]),t._v(": Selects only production tags to include in the CR for deployment")]),t._v(" "),a("li",[a("code",[t._v("ent bundle generate-cr -t dev prod")]),t._v(": Selects both development and production tags to include in the CR for deployment")])]),t._v(" "),a("h2",{attrs:{id:"ecr-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecr-commands"}},[t._v("#")]),t._v(" ECR Commands")]),t._v(" "),a("p",[t._v("The following commands are applicable to both docker-based and git-based bundles.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr deploy")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate the custom resource (CR) and deploy it to the current profile")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr gen-secret")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate and display the skeleton for a plugin Secret")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr generate-cr")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate the deployment custom resource")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr get-bundle-id [repository-url]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Calculate and display the bundle ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr get-plugin-code")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Calculate and display the plugin code")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr install")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Install a bundle in the ECR")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr install --conflict-strategy=OVERRIDE")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Adopt a strategy for conflicts affecting installed bundles")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr list")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Display the list of bundles associated with the current profile")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent ecr uninstall")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Uninstall a bundle")])])])]),t._v(" "),a("h4",{attrs:{id:"ecr-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecr-command-details"}},[t._v("#")]),t._v(" ECR Command Details")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("ent ecr get-bundle-id")]),t._v(": The unique identifier assigned to each bundle provides a mechanism to customize parameters and add security controls for bundle-specific resources")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ent ecr get-plugin-code")]),t._v(": To retrieve the unique identifier for each microservice")]),t._v(" "),a("ul",[a("li",[t._v("Docker-based bundles: "),a("code",[t._v("ent ecr get-plugin-code YOUR-ORG/YOUR-PLUGIN-NAME --repo=docker://registry.hub.docker.com/YOUR-ORG/YOUR-BUNDLE")])]),t._v(" "),a("li",[t._v("Git-based bundles: "),a("code",[t._v("ent ecr get-plugin-code --auto --repo=[repository-url]")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ent ecr install --conflict-strategy=OVERRIDE")]),t._v(": If a bundle project has already been installed, the "),a("code",[t._v("--conflict-strategy")]),t._v(" flag forces a "),a("code",[t._v("CREATE")]),t._v(", "),a("code",[t._v("SKIP")]),t._v(" or "),a("code",[t._v("OVERRIDE")]),t._v(" strategy for components")])])]),t._v(" "),a("h2",{attrs:{id:"git-based-bundle-commands"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-based-bundle-commands"}},[t._v("#")]),t._v(" Git-based Bundle Commands")]),t._v(" "),a("p",[t._v("The following ent commands are used to manage git-based (< Entando 7.1) bundles.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("Command")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Descriptions")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundler from-git")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate a CR from a Git repository for publication or exporting")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent bundler from-env")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Generate a CR from an existing environment for the current or selected location")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj be-log")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Fetch the logs for bundle plugins")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj be-test-run")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize one or more microservices")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj build")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Build the project components")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj deploy")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Deploy the bundle into the ECR")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj ext-keycloak start")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize Keycloak with Docker Compose")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj fe-test-run")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize one or more frontend widgets, each from its own shell")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj get-bundle-id --auto")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Determine the bundle ID")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj get-plugin-code --auto [URL]")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Determine the plugin code of each microservice in the project")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj install")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Install the bundle into Entando")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj install --conflict-strategy=OVERRIDE")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Adopt a strategy for conflicts affecting installed bundles")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj pbs-init")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Initialize the bundle directory")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("ent prj pbs-publish")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("Publish the artifacts to GitHub and Docker Hub")])])])]),t._v(" "),a("p",[a("strong",[t._v("Note")]),t._v(": "),a("code",[t._v("ent prj")]),t._v(" commands are deprecated in favor of "),a("code",[t._v("ent bundle")]),t._v(" commands.")]),t._v(" "),a("h4",{attrs:{id:"prj-command-details"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prj-command-details"}},[t._v("#")]),t._v(" Prj Command Details")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("ent prj get-bundle-id")]),t._v(": The unique identifier assigned to each bundle provides a mechanism to customize parameters and add security controls for bundle-specific resources")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ent prj get-plugin-code")]),t._v(": Uniquely and safely identifies each bundle plugin and derived cloud-native resources")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ent prj install --conflict-strategy=OVERRIDE")]),t._v(": If a bundle project has already been installed, the "),a("code",[t._v("--conflict-strategy")]),t._v(" flag forces a "),a("code",[t._v("CREATE")]),t._v(", "),a("code",[t._v("SKIP")]),t._v(" or "),a("code",[t._v("OVERRIDE")]),t._v(" strategy for components")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ent bundler")]),t._v(": Provides an interactive mode to identify components to export. Point the bundler to existing environments to extract components and static assets into a custom bundle. This bundle can be used to migrate from one Entando environment to another (e.g. Dev to QA) or as a framework for building a new application.")]),t._v(" "),a("ul",[a("li",[t._v("An "),a("code",[t._v("env.json")]),t._v(" file to configure the application URLs and client credentials must be present in the directory from which the bundler is run. For example:"),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coreBaseApi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://YOUR-DOMAIN-OR-IP/entando-de-app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"componentManagerApi"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://YOUR-DOMAIN-OR-IP/digital-exchange"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clientId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"YOUR-CLIENT-ID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clientSecret"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"YOUR-CLIENT-SECRET"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("Instructions to export a bundle, including how to configure "),a("code",[t._v("env.json")]),t._v(", can be found in the "),a("RouterLink",{attrs:{to:"/next/tutorials/create/pb/export-bundle-from-application.html"}},[t._v("Export and Publish a Bundle tutorial")]),t._v(".")],1),t._v(" "),a("li",[t._v("If an "),a("code",[t._v("Unable to extract the application client secret")]),t._v(" error is thrown:\n"),a("ol",[a("li",[t._v("Verify that the current profile namespace and application name are correct and match the output of the following command:"),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v(" ent status\n")])])])]),t._v(" "),a("li",[t._v("Assign the appropriate namespace and application name:"),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v(" ent appname YOUR-APPNAME\n ent namespace YOUR-NAMESPACE\n")])])])])])])])])]),t._v(" "),a("p",[t._v("Follow the "),a("RouterLink",{attrs:{to:"/next/tutorials/create/pb/publish-project-bundle.html"}},[t._v("Build and Publish a Bundle Project")]),t._v(" tutorial for more information about bundling a Docker-based project.")],1)])}),[],!1,null,null,null);e.default=l.exports}}]);