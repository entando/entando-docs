(window.webpackJsonp=window.webpackJsonp||[]).push([[673],{1934:function(e,t,a){"use strict";a.r(t);var s=a(36),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"use-plugin-environment-variables-to-customize-microservices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-plugin-environment-variables-to-customize-microservices"}},[e._v("#")]),e._v(" Use Plugin Environment Variables to Customize Microservices")]),e._v(" "),a("p",[e._v("This tutorial describes how to use environment variables to customize the behavior of plugin microservices. Using environment variables as a configuration mechanism allows the same Linux image to run in development and production environments. This is especially useful when managing sensitive information via Kubernetes Secrets.")]),e._v(" "),a("p",[e._v("Version 4 of the Entando plugin descriptor adds the ability to make environment variables available to a microservice via the plugin "),a("code",[e._v("descriptor.yaml")]),e._v(" file. There are two options.")]),e._v(" "),a("ol",[a("li",[e._v("Inject the variables using a key-value pair")]),e._v(" "),a("li",[e._v("Inject a reference to an existing Kubernetes Secret")])]),e._v(" "),a("p",[e._v("This tutorial will demonstrate both of these options. The Entando Plugin will receive one environment value directly as plain text in the Pod YAML and the other indirectly via a referenced Secret.")]),e._v(" "),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[e._v("#")]),e._v(" Prerequisites")]),e._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/v7.0/tutorials/create/ms/generate-microservices-and-micro-frontends.html"}},[e._v("A project bundle")]),e._v(" using the latest Entando Blueprint.")],1)]),e._v(" "),a("h2",{attrs:{id:"add-environment-variables-to-the-plugin-descriptor-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-environment-variables-to-the-plugin-descriptor-file"}},[e._v("#")]),e._v(" Add Environment Variables to the Plugin Descriptor File")]),e._v(" "),a("ol",[a("li",[e._v("Determine YOUR-BUNDLE-ID. You can do this from your project directory using this command:")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("ent prj get-bundle-id\n")])])]),a("p",[e._v("Alternatively, supply the full bundle URL (including the .git suffix):")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("ent ecr get-bundle-id https://github.com/YOUR-ACCOUNT/YOUR-PLUGIN-BUNDLE.git\n")])])]),a("p",[e._v("For example, here's the bundle ID for the first "),a("RouterLink",{attrs:{to:"/v7.0/tutorials/solution/install-standard-demo.html"}},[e._v("Standard Banking Demo bundle")]),e._v(":")],1),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("$ent ecr https://github.com/entando-samples/standard-demo-banking-bundle.git\n343826ca\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Now create a Secret named "),a("code",[e._v("YOUR-BUNDLE-ID-my-secret")]),e._v(" with a key-value pair "),a("code",[e._v("mySecretKey=mySecretValue")]),e._v(". Make sure to replace YOUR-BUNDLE-ID with the value from the previous step.")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("kubectl create secret generic YOUR-BUNDLE-ID-my-secret --from-literal"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("mySecretKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("mySecretValue -n entando\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Verify that the plugin file "),a("code",[e._v("bundle/plugins/YOUR-PLUGIN.yaml")]),e._v(" specifies "),a("code",[e._v("descriptorVersion: v4")]),e._v(" or add it if you're upgrading an existing bundle.")]),e._v(" "),a("li",[e._v("Insert the following "),a("code",[e._v("environmentVariables")]),e._v(" section into "),a("code",[e._v("YOUR-PLUGIN.yaml")]),e._v(" after replacing "),a("code",[e._v("YOUR-BUNDLE-ID")]),e._v(" with the correct value. By convention, environment variables are all caps and K8s resource names are hyphenated.")])]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("environmentVariables")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" SIMPLE_VAR\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" mySimpleValue\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" SECRET_VAR\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("valueFrom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("secretKeyRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" YOUR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("BUNDLE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("my"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("secret\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" mySecretKey\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[a("RouterLink",{attrs:{to:"/v7.0/tutorials/create/pb/publish-project-bundle.html"}},[e._v("Build and deploy")]),e._v(" the updated bundle.")],1)]),e._v(" "),a("h2",{attrs:{id:"verify-the-environment-variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#verify-the-environment-variables"}},[e._v("#")]),e._v(" Verify the Environment Variables")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Retrieve your microservice pod name. Use "),a("code",[e._v("ent kubectl get pods")]),e._v(" or your cluster management tool to find the name.")]),e._v(" "),a("p",[e._v("The pod name begins with 'pn', followed by two generated alpha-numeric strings, your docker organization name, microservice name, etc."),a("br"),e._v("\nE.g. YOUR-MICROSERVICE-POD-NAME = "),a("code",[e._v("pn-ccfcefa6-615bc3ba-dockerorg-conference-ms-deploymentvpsgj")])])]),e._v(" "),a("li",[a("p",[e._v("Shell into the pod, using the name from above:")])])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[e._v("ent kubectl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it YOUR-MICROSERVICE-POD-NAME -- /bin/bash\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("Check for the environment variables using the command "),a("code",[e._v("env")]),e._v(" or this command:")])]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SIMPLE_VAR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SIMPLE_VAR")]),e._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SECRET_VAR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$SECRET_VAR")]),e._v("\n")])])]),a("p",[e._v("Expected output:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SIMPLE_VAR=mySimpleValue, SECRET_VAR=mySecretValue\n")])])]),a("p",[e._v("You have now learned to use environment variables with plugin microsevices on the Entando Platform.")])])}),[],!1,null,null,null);t.default=n.exports}}]);